---------Questions class---------------

public class Question {

String question = null;
//Answer choices
String answerOne = null;
String answerTwo = null;
String answerThree = null;
String answerFour = null;
//Correct answer
String correctAnswer = null;

public Question(String question, String answerOne, String answerTwo,
String answerThree, String answerFour, String correctAnswer) {

this.question = question;
//Answer choices
this.answerOne = answerOne;
this.answerTwo = answerTwo;
this.answerThree = answerThree;
this.answerFour = answerFour;
//Correct answer
this.correctAnswer = correctAnswer;
}
------------main class-----------

****Need to remove player 2
***need storyline
***need to figure out logisitcs of bonus room in map and hints and buying hp
***need to implement room map with questions size for loop to determine player location
*** POSSBILY add multiplier to score and combo
***needs output to set player name
***need to implement input/output to high score file

modify for loop so that number of questions remaining corrolates to level.


import java.io.File;
import java.io.FileNotFoundException;
import java.util.ArrayList;
import java.util.Scanner;


public class Game {

    /**
     * @param args the command line arguments
     * @throws java.io.FileNotFoundException
     */
    public static void main(String[] args) throws FileNotFoundException {
        //Scanner to read file input
        Scanner scan = new Scanner(new File("questions.txt"));
        ArrayList<Question> questions = new ArrayList<>();
        int playerOnePoints = 0;
        int playerTwoPoints = 0;
        //Scanner to scan keyboard input
        Scanner kb = new Scanner(System.in);

        /**
         * Create object instances of each question and pass them into an
         * ArrayList
         */
        int numQuestions = Integer.parseInt(scan.nextLine());
        for(int i = 0; i < numQuestions; i++) {
           questions.add(new Question(scan.nextLine(), scan.nextLine(),
                   scan.nextLine(), scan.nextLine(), scan.nextLine(),
                   scan.nextLine()));
        }

        /**
         * Alternate questions to each player, starting with player one.
         * Notify the players if they guessed correctly or not and track
         * their points.
         */
        for(int i = 0; i < questions.size(); i ++) {

                System.out.println("Player One, please answer the following"
                        + " question:\n");
                printQuestion(questions.get(i));
                String answer = kb.next();
                if(answer.equalsIgnoreCase(questions.get(i).correctAnswer)) {
                    playerOnePoints++;
                    System.out.println("You got it right! You have "
                            + playerOnePoints + " points.\n");
                } else {
                    System.out.println("Sorry, that was incorrect! You have "
                            + playerOnePoints + " points.\n");
                }
            } else{ //Give every other question to player two
                System.out.println("Player Two, please answer the following"
                        + " question:\n");
                printQuestion(questions.get(i));
                String answer = kb.next();
                if(answer.equalsIgnoreCase(questions.get(i).correctAnswer)) {
                    playerTwoPoints++;
                    System.out.println("You got it right! You have "
                            + playerTwoPoints + " points.\n");
                } else {
                    System.out.println("Sorry, that was incorrect! You have "
                            + playerTwoPoints + " points.\n");
                }
            }
        }

        //Decide who wins
        if(playerOnePoints > playerTwoPoints) {
            System.out.print("Player one wins!");
        } else {
            System.out.print("Player two wins!");
        }


    }

    public static void printQuestion(Question question) {
        System.out.println(question.question);
        System.out.println(question.answerOne);
        System.out.println(question.answerTwo);
        System.out.println(question.answerThree);
        System.out.println(question.answerFour);
    }
}

------------------------------------------------------
Player class
***need to implement player object with name, hp, max hp, location, tokens, score, percent correct

***maybe this is what goes to high score input/output but not sure
--------------------------------------------------------
Room class
Room arrays and mapping for 3 levels, token shops in-between, and level 4
***need to implement door lock on level 4 in relation to % correct

-----------------------------------------------------------------
***IO**
****need questions.txt to pull questions from
****need to read/write hgih score file w/ pname
****option to check leaderboards